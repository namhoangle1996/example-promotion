// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service_transaction/transaction.proto

package service_transaction

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TransactionDTO struct {
	Id                        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Currency                  string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Message                   string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	State                     string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Status                    string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Type                      string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Amount                    int64    `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	VoucherCode               string   `protobuf:"bytes,8,opt,name=voucherCode,proto3" json:"voucherCode,omitempty"`
	AmountAfterAddVoucher     int64    `protobuf:"varint,9,opt,name=amountAfterAddVoucher,proto3" json:"amountAfterAddVoucher,omitempty"`
	PayerAmountBefore         int64    `protobuf:"varint,23,opt,name=payerAmountBefore,proto3" json:"payerAmountBefore,omitempty"`
	PayeeAmountBefore         int64    `protobuf:"varint,24,opt,name=payeeAmountBefore,proto3" json:"payeeAmountBefore,omitempty"`
	PayerAmountAfter          int64    `protobuf:"varint,25,opt,name=payerAmountAfter,proto3" json:"payerAmountAfter,omitempty"`
	PayeeAmountAfter          int64    `protobuf:"varint,26,opt,name=payeeAmountAfter,proto3" json:"payeeAmountAfter,omitempty"`
	AmountBeforeAddVoucher    int64    `protobuf:"varint,10,opt,name=amountBeforeAddVoucher,proto3" json:"amountBeforeAddVoucher,omitempty"`
	InvoiceId                 string   `protobuf:"bytes,11,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
	Source                    string   `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
	TypeTransfer              string   `protobuf:"bytes,13,opt,name=typeTransfer,proto3" json:"typeTransfer,omitempty"`
	DeviceId                  string   `protobuf:"bytes,14,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	DateTime                  string   `protobuf:"bytes,15,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	FreezeId                  string   `protobuf:"bytes,16,opt,name=freezeId,proto3" json:"freezeId,omitempty"`
	VerifyFailCount           int64    `protobuf:"varint,17,opt,name=verifyFailCount,proto3" json:"verifyFailCount,omitempty"`
	CreatedAt                 int64    `protobuf:"varint,18,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	ExpiredAt                 int64    `protobuf:"varint,19,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"`
	UpdatedAt                 int64    `protobuf:"varint,20,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	PayerId                   string   `protobuf:"bytes,21,opt,name=payerId,proto3" json:"payerId,omitempty"`
	PayeeId                   string   `protobuf:"bytes,22,opt,name=payeeId,proto3" json:"payeeId,omitempty"`
	UnUseWallet               bool     `protobuf:"varint,27,opt,name=unUseWallet,proto3" json:"unUseWallet,omitempty"`
	AmountTransactionCashBack int64    `protobuf:"varint,28,opt,name=amountTransactionCashBack,proto3" json:"amountTransactionCashBack,omitempty"`
	TransactionCashback       string   `protobuf:"bytes,29,opt,name=transactionCashback,proto3" json:"transactionCashback,omitempty"`
	PartnerCode               string   `protobuf:"bytes,30,opt,name=partnerCode,proto3" json:"partnerCode,omitempty"`
	WalletIdSrc               string   `protobuf:"bytes,31,opt,name=walletIdSrc,proto3" json:"walletIdSrc,omitempty"`
	WalletIdDist              string   `protobuf:"bytes,32,opt,name=walletIdDist,proto3" json:"walletIdDist,omitempty"`
	RefId                     string   `protobuf:"bytes,33,opt,name=refId,proto3" json:"refId,omitempty"`
	AmountVAT                 int64    `protobuf:"varint,35,opt,name=amountVAT,proto3" json:"amountVAT,omitempty"`
	PaymentType               string   `protobuf:"bytes,36,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	Fee                       uint64   `protobuf:"varint,37,opt,name=fee,proto3" json:"fee,omitempty"`
	DiscountAmount            uint64   `protobuf:"varint,38,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	LastAmount                int64    `protobuf:"varint,39,opt,name=last_amount,json=lastAmount,proto3" json:"last_amount,omitempty"`
	MerchantCode              string   `protobuf:"bytes,40,opt,name=merchant_code,json=merchantCode,proto3" json:"merchant_code,omitempty"`
	TypeWallet                string   `protobuf:"bytes,41,opt,name=type_wallet,json=typeWallet,proto3" json:"type_wallet,omitempty"`
	MerchantId                string   `protobuf:"bytes,42,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	BankCode                  string   `protobuf:"bytes,43,opt,name=bank_code,json=bankCode,proto3" json:"bank_code,omitempty"`
	BankTransactionId         string   `protobuf:"bytes,44,opt,name=bank_transaction_id,json=bankTransactionId,proto3" json:"bank_transaction_id,omitempty"`
	Napas                     bool     `protobuf:"varint,45,opt,name=napas,proto3" json:"napas,omitempty"`
	IbftType                  string   `protobuf:"bytes,46,opt,name=ibft_type,json=ibftType,proto3" json:"ibft_type,omitempty"`
	CardNo                    string   `protobuf:"bytes,47,opt,name=card_no,json=cardNo,proto3" json:"card_no,omitempty"`
	AccountNo                 string   `protobuf:"bytes,48,opt,name=account_no,json=accountNo,proto3" json:"account_no,omitempty"`
	FailReason                string   `protobuf:"bytes,49,opt,name=fail_reason,json=failReason,proto3" json:"fail_reason,omitempty"`
	OrderId                   string   `protobuf:"bytes,50,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	TransId                   string   `protobuf:"bytes,51,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	LixiId                    string   `protobuf:"bytes,52,opt,name=lixi_id,json=lixiId,proto3" json:"lixi_id,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *TransactionDTO) Reset()         { *m = TransactionDTO{} }
func (m *TransactionDTO) String() string { return proto.CompactTextString(m) }
func (*TransactionDTO) ProtoMessage()    {}
func (*TransactionDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_9e61b905dc64a9b6, []int{0}
}
func (m *TransactionDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionDTO.Unmarshal(m, b)
}
func (m *TransactionDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionDTO.Marshal(b, m, deterministic)
}
func (dst *TransactionDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionDTO.Merge(dst, src)
}
func (m *TransactionDTO) XXX_Size() int {
	return xxx_messageInfo_TransactionDTO.Size(m)
}
func (m *TransactionDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionDTO.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionDTO proto.InternalMessageInfo

func (m *TransactionDTO) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TransactionDTO) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *TransactionDTO) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TransactionDTO) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *TransactionDTO) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TransactionDTO) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TransactionDTO) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TransactionDTO) GetVoucherCode() string {
	if m != nil {
		return m.VoucherCode
	}
	return ""
}

func (m *TransactionDTO) GetAmountAfterAddVoucher() int64 {
	if m != nil {
		return m.AmountAfterAddVoucher
	}
	return 0
}

func (m *TransactionDTO) GetPayerAmountBefore() int64 {
	if m != nil {
		return m.PayerAmountBefore
	}
	return 0
}

func (m *TransactionDTO) GetPayeeAmountBefore() int64 {
	if m != nil {
		return m.PayeeAmountBefore
	}
	return 0
}

func (m *TransactionDTO) GetPayerAmountAfter() int64 {
	if m != nil {
		return m.PayerAmountAfter
	}
	return 0
}

func (m *TransactionDTO) GetPayeeAmountAfter() int64 {
	if m != nil {
		return m.PayeeAmountAfter
	}
	return 0
}

func (m *TransactionDTO) GetAmountBeforeAddVoucher() int64 {
	if m != nil {
		return m.AmountBeforeAddVoucher
	}
	return 0
}

func (m *TransactionDTO) GetInvoiceId() string {
	if m != nil {
		return m.InvoiceId
	}
	return ""
}

func (m *TransactionDTO) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *TransactionDTO) GetTypeTransfer() string {
	if m != nil {
		return m.TypeTransfer
	}
	return ""
}

func (m *TransactionDTO) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *TransactionDTO) GetDateTime() string {
	if m != nil {
		return m.DateTime
	}
	return ""
}

func (m *TransactionDTO) GetFreezeId() string {
	if m != nil {
		return m.FreezeId
	}
	return ""
}

func (m *TransactionDTO) GetVerifyFailCount() int64 {
	if m != nil {
		return m.VerifyFailCount
	}
	return 0
}

func (m *TransactionDTO) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *TransactionDTO) GetExpiredAt() int64 {
	if m != nil {
		return m.ExpiredAt
	}
	return 0
}

func (m *TransactionDTO) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *TransactionDTO) GetPayerId() string {
	if m != nil {
		return m.PayerId
	}
	return ""
}

func (m *TransactionDTO) GetPayeeId() string {
	if m != nil {
		return m.PayeeId
	}
	return ""
}

func (m *TransactionDTO) GetUnUseWallet() bool {
	if m != nil {
		return m.UnUseWallet
	}
	return false
}

func (m *TransactionDTO) GetAmountTransactionCashBack() int64 {
	if m != nil {
		return m.AmountTransactionCashBack
	}
	return 0
}

func (m *TransactionDTO) GetTransactionCashback() string {
	if m != nil {
		return m.TransactionCashback
	}
	return ""
}

func (m *TransactionDTO) GetPartnerCode() string {
	if m != nil {
		return m.PartnerCode
	}
	return ""
}

func (m *TransactionDTO) GetWalletIdSrc() string {
	if m != nil {
		return m.WalletIdSrc
	}
	return ""
}

func (m *TransactionDTO) GetWalletIdDist() string {
	if m != nil {
		return m.WalletIdDist
	}
	return ""
}

func (m *TransactionDTO) GetRefId() string {
	if m != nil {
		return m.RefId
	}
	return ""
}

func (m *TransactionDTO) GetAmountVAT() int64 {
	if m != nil {
		return m.AmountVAT
	}
	return 0
}

func (m *TransactionDTO) GetPaymentType() string {
	if m != nil {
		return m.PaymentType
	}
	return ""
}

func (m *TransactionDTO) GetFee() uint64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *TransactionDTO) GetDiscountAmount() uint64 {
	if m != nil {
		return m.DiscountAmount
	}
	return 0
}

func (m *TransactionDTO) GetLastAmount() int64 {
	if m != nil {
		return m.LastAmount
	}
	return 0
}

func (m *TransactionDTO) GetMerchantCode() string {
	if m != nil {
		return m.MerchantCode
	}
	return ""
}

func (m *TransactionDTO) GetTypeWallet() string {
	if m != nil {
		return m.TypeWallet
	}
	return ""
}

func (m *TransactionDTO) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *TransactionDTO) GetBankCode() string {
	if m != nil {
		return m.BankCode
	}
	return ""
}

func (m *TransactionDTO) GetBankTransactionId() string {
	if m != nil {
		return m.BankTransactionId
	}
	return ""
}

func (m *TransactionDTO) GetNapas() bool {
	if m != nil {
		return m.Napas
	}
	return false
}

func (m *TransactionDTO) GetIbftType() string {
	if m != nil {
		return m.IbftType
	}
	return ""
}

func (m *TransactionDTO) GetCardNo() string {
	if m != nil {
		return m.CardNo
	}
	return ""
}

func (m *TransactionDTO) GetAccountNo() string {
	if m != nil {
		return m.AccountNo
	}
	return ""
}

func (m *TransactionDTO) GetFailReason() string {
	if m != nil {
		return m.FailReason
	}
	return ""
}

func (m *TransactionDTO) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *TransactionDTO) GetTransId() string {
	if m != nil {
		return m.TransId
	}
	return ""
}

func (m *TransactionDTO) GetLixiId() string {
	if m != nil {
		return m.LixiId
	}
	return ""
}

type ETransactionDTO struct {
	Id                            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TransactionId                 string   `protobuf:"bytes,2,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	AppId                         string   `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId,omitempty"`
	Currency                      string   `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Message                       string   `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	State                         string   `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Status                        string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	ServiceType                   string   `protobuf:"bytes,8,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
	TransactionType               string   `protobuf:"bytes,9,opt,name=transactionType,proto3" json:"transactionType,omitempty"`
	SubTransactionType            string   `protobuf:"bytes,10,opt,name=subTransactionType,proto3" json:"subTransactionType,omitempty"`
	TypeWallet                    string   `protobuf:"bytes,11,opt,name=typeWallet,proto3" json:"typeWallet,omitempty"`
	Amount                        int64    `protobuf:"varint,12,opt,name=amount,proto3" json:"amount,omitempty"`
	LastAmount                    int64    `protobuf:"varint,13,opt,name=lastAmount,proto3" json:"lastAmount,omitempty"`
	AmountFeeGpay                 int64    `protobuf:"varint,14,opt,name=amountFeeGpay,proto3" json:"amountFeeGpay,omitempty"`
	AmountDiscount                int64    `protobuf:"varint,15,opt,name=amountDiscount,proto3" json:"amountDiscount,omitempty"`
	AmountMerchantFee             int64    `protobuf:"varint,16,opt,name=amountMerchantFee,proto3" json:"amountMerchantFee,omitempty"`
	AmountTransactionCashBack     int64    `protobuf:"varint,17,opt,name=amountTransactionCashBack,proto3" json:"amountTransactionCashBack,omitempty"`
	VoucherCode                   string   `protobuf:"bytes,18,opt,name=voucherCode,proto3" json:"voucherCode,omitempty"`
	SourceOfFund                  string   `protobuf:"bytes,19,opt,name=sourceOfFund,proto3" json:"sourceOfFund,omitempty"`
	MerchantID                    string   `protobuf:"bytes,20,opt,name=merchantID,proto3" json:"merchantID,omitempty"`
	MerchantTransactionId         string   `protobuf:"bytes,21,opt,name=merchantTransactionId,proto3" json:"merchantTransactionId,omitempty"`
	CashbackTransactionID         string   `protobuf:"bytes,22,opt,name=cashbackTransactionID,proto3" json:"cashbackTransactionID,omitempty"`
	RefId                         string   `protobuf:"bytes,23,opt,name=refId,proto3" json:"refId,omitempty"`
	OrderId                       string   `protobuf:"bytes,24,opt,name=orderId,proto3" json:"orderId,omitempty"`
	DeviceId                      string   `protobuf:"bytes,25,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	PayerId                       string   `protobuf:"bytes,26,opt,name=payerId,proto3" json:"payerId,omitempty"`
	PayeeId                       string   `protobuf:"bytes,27,opt,name=payeeId,proto3" json:"payeeId,omitempty"`
	GpayAccountID                 string   `protobuf:"bytes,28,opt,name=gpayAccountID,proto3" json:"gpayAccountID,omitempty"`
	BankTransactionId             string   `protobuf:"bytes,29,opt,name=bankTransactionId,proto3" json:"bankTransactionId,omitempty"`
	Napas                         bool     `protobuf:"varint,30,opt,name=napas,proto3" json:"napas,omitempty"`
	BankCode                      string   `protobuf:"bytes,31,opt,name=bankCode,proto3" json:"bankCode,omitempty"`
	IbftType                      string   `protobuf:"bytes,32,opt,name=ibftType,proto3" json:"ibftType,omitempty"`
	CardNo                        string   `protobuf:"bytes,33,opt,name=cardNo,proto3" json:"cardNo,omitempty"`
	AccountNo                     string   `protobuf:"bytes,34,opt,name=accountNo,proto3" json:"accountNo,omitempty"`
	FailReason                    string   `protobuf:"bytes,35,opt,name=failReason,proto3" json:"failReason,omitempty"`
	ReturnCode                    string   `protobuf:"bytes,36,opt,name=returnCode,proto3" json:"returnCode,omitempty"`
	ReturnMessage                 string   `protobuf:"bytes,37,opt,name=returnMessage,proto3" json:"returnMessage,omitempty"`
	Exception                     string   `protobuf:"bytes,38,opt,name=exception,proto3" json:"exception,omitempty"`
	CreatedAt                     int64    `protobuf:"varint,39,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt                     int64    `protobuf:"varint,40,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt                     int64    `protobuf:"varint,41,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	PayerStatusKyc                bool     `protobuf:"varint,42,opt,name=PayerStatusKyc,proto3" json:"PayerStatusKyc,omitempty"`
	PayerStatusLinkedBank         bool     `protobuf:"varint,43,opt,name=PayerStatusLinkedBank,proto3" json:"PayerStatusLinkedBank,omitempty"`
	PayeeStatusKyc                bool     `protobuf:"varint,44,opt,name=PayeeStatusKyc,proto3" json:"PayeeStatusKyc,omitempty"`
	PayeeStatusLinkedBank         bool     `protobuf:"varint,45,opt,name=PayeeStatusLinkedBank,proto3" json:"PayeeStatusLinkedBank,omitempty"`
	MerchantTypeWallet            string   `protobuf:"bytes,46,opt,name=MerchantTypeWallet,proto3" json:"MerchantTypeWallet,omitempty"`
	BankTypeWallet                string   `protobuf:"bytes,48,opt,name=BankTypeWallet,proto3" json:"BankTypeWallet,omitempty"`
	GpayTypeWallet                string   `protobuf:"bytes,49,opt,name=GpayTypeWallet,proto3" json:"GpayTypeWallet,omitempty"`
	AdminId                       string   `protobuf:"bytes,50,opt,name=AdminId,proto3" json:"AdminId,omitempty"`
	IbftReceiveBank               string   `protobuf:"bytes,51,opt,name=IbftReceiveBank,proto3" json:"IbftReceiveBank,omitempty"`
	IbftReceivePayeeName          string   `protobuf:"bytes,52,opt,name=IbftReceivePayeeName,proto3" json:"IbftReceivePayeeName,omitempty"`
	AmountMerchantFeeGpayReality  int64    `protobuf:"varint,59,opt,name=amountMerchantFeeGpayReality,proto3" json:"amountMerchantFeeGpayReality,omitempty"`
	AmountMerchantFeeGpayTmp      int64    `protobuf:"varint,64,opt,name=amountMerchantFeeGpayTmp,proto3" json:"amountMerchantFeeGpayTmp,omitempty"`
	StatusChecking                string   `protobuf:"bytes,54,opt,name=StatusChecking,proto3" json:"StatusChecking,omitempty"`
	TimeToChecking                int64    `protobuf:"varint,55,opt,name=TimeToChecking,proto3" json:"TimeToChecking,omitempty"`
	StatusCodeChecking            string   `protobuf:"bytes,56,opt,name=StatusCodeChecking,proto3" json:"StatusCodeChecking,omitempty"`
	StatusSettlement              string   `protobuf:"bytes,57,opt,name=StatusSettlement,proto3" json:"StatusSettlement,omitempty"`
	TimeSettlement                int64    `protobuf:"varint,58,opt,name=TimeSettlement,proto3" json:"TimeSettlement,omitempty"`
	ReasonReverseRefID            string   `protobuf:"bytes,60,opt,name=ReasonReverseRefID,proto3" json:"ReasonReverseRefID,omitempty"`
	ReverseRefID                  string   `protobuf:"bytes,61,opt,name=ReverseRefID,proto3" json:"ReverseRefID,omitempty"`
	HasReversed                   bool     `protobuf:"varint,62,opt,name=HasReversed,proto3" json:"HasReversed,omitempty"`
	VoucherID                     string   `protobuf:"bytes,65,opt,name=VoucherID,proto3" json:"VoucherID,omitempty"`
	SubAccountID                  string   `protobuf:"bytes,66,opt,name=SubAccountID,proto3" json:"SubAccountID,omitempty"`
	SubscriberMerchantID          string   `protobuf:"bytes,67,opt,name=SubscriberMerchantID,proto3" json:"SubscriberMerchantID,omitempty"`
	SubscriberMerchantTypeWallet  string   `protobuf:"bytes,68,opt,name=SubscriberMerchantTypeWallet,proto3" json:"SubscriberMerchantTypeWallet,omitempty"`
	LuckyMoneyID                  string   `protobuf:"bytes,69,opt,name=LuckyMoneyID,proto3" json:"LuckyMoneyID,omitempty"`
	ProviderMerchantID            string   `protobuf:"bytes,70,opt,name=ProviderMerchantID,proto3" json:"ProviderMerchantID,omitempty"`
	FeeMerchantProvider           int64    `protobuf:"varint,71,opt,name=FeeMerchantProvider,proto3" json:"FeeMerchantProvider,omitempty"`
	FeeSubscribeMerchant          int64    `protobuf:"varint,72,opt,name=FeeSubscribeMerchant,proto3" json:"FeeSubscribeMerchant,omitempty"`
	DiscountOfMerchantProvider    int64    `protobuf:"varint,73,opt,name=DiscountOfMerchantProvider,proto3" json:"DiscountOfMerchantProvider,omitempty"`
	DiscountForMerchantSubscriber int64    `protobuf:"varint,74,opt,name=DiscountForMerchantSubscriber,proto3" json:"DiscountForMerchantSubscriber,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *ETransactionDTO) Reset()         { *m = ETransactionDTO{} }
func (m *ETransactionDTO) String() string { return proto.CompactTextString(m) }
func (*ETransactionDTO) ProtoMessage()    {}
func (*ETransactionDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_9e61b905dc64a9b6, []int{1}
}
func (m *ETransactionDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETransactionDTO.Unmarshal(m, b)
}
func (m *ETransactionDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETransactionDTO.Marshal(b, m, deterministic)
}
func (dst *ETransactionDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETransactionDTO.Merge(dst, src)
}
func (m *ETransactionDTO) XXX_Size() int {
	return xxx_messageInfo_ETransactionDTO.Size(m)
}
func (m *ETransactionDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ETransactionDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ETransactionDTO proto.InternalMessageInfo

func (m *ETransactionDTO) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ETransactionDTO) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *ETransactionDTO) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *ETransactionDTO) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *ETransactionDTO) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ETransactionDTO) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ETransactionDTO) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ETransactionDTO) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *ETransactionDTO) GetTransactionType() string {
	if m != nil {
		return m.TransactionType
	}
	return ""
}

func (m *ETransactionDTO) GetSubTransactionType() string {
	if m != nil {
		return m.SubTransactionType
	}
	return ""
}

func (m *ETransactionDTO) GetTypeWallet() string {
	if m != nil {
		return m.TypeWallet
	}
	return ""
}

func (m *ETransactionDTO) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ETransactionDTO) GetLastAmount() int64 {
	if m != nil {
		return m.LastAmount
	}
	return 0
}

func (m *ETransactionDTO) GetAmountFeeGpay() int64 {
	if m != nil {
		return m.AmountFeeGpay
	}
	return 0
}

func (m *ETransactionDTO) GetAmountDiscount() int64 {
	if m != nil {
		return m.AmountDiscount
	}
	return 0
}

func (m *ETransactionDTO) GetAmountMerchantFee() int64 {
	if m != nil {
		return m.AmountMerchantFee
	}
	return 0
}

func (m *ETransactionDTO) GetAmountTransactionCashBack() int64 {
	if m != nil {
		return m.AmountTransactionCashBack
	}
	return 0
}

func (m *ETransactionDTO) GetVoucherCode() string {
	if m != nil {
		return m.VoucherCode
	}
	return ""
}

func (m *ETransactionDTO) GetSourceOfFund() string {
	if m != nil {
		return m.SourceOfFund
	}
	return ""
}

func (m *ETransactionDTO) GetMerchantID() string {
	if m != nil {
		return m.MerchantID
	}
	return ""
}

func (m *ETransactionDTO) GetMerchantTransactionId() string {
	if m != nil {
		return m.MerchantTransactionId
	}
	return ""
}

func (m *ETransactionDTO) GetCashbackTransactionID() string {
	if m != nil {
		return m.CashbackTransactionID
	}
	return ""
}

func (m *ETransactionDTO) GetRefId() string {
	if m != nil {
		return m.RefId
	}
	return ""
}

func (m *ETransactionDTO) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ETransactionDTO) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *ETransactionDTO) GetPayerId() string {
	if m != nil {
		return m.PayerId
	}
	return ""
}

func (m *ETransactionDTO) GetPayeeId() string {
	if m != nil {
		return m.PayeeId
	}
	return ""
}

func (m *ETransactionDTO) GetGpayAccountID() string {
	if m != nil {
		return m.GpayAccountID
	}
	return ""
}

func (m *ETransactionDTO) GetBankTransactionId() string {
	if m != nil {
		return m.BankTransactionId
	}
	return ""
}

func (m *ETransactionDTO) GetNapas() bool {
	if m != nil {
		return m.Napas
	}
	return false
}

func (m *ETransactionDTO) GetBankCode() string {
	if m != nil {
		return m.BankCode
	}
	return ""
}

func (m *ETransactionDTO) GetIbftType() string {
	if m != nil {
		return m.IbftType
	}
	return ""
}

func (m *ETransactionDTO) GetCardNo() string {
	if m != nil {
		return m.CardNo
	}
	return ""
}

func (m *ETransactionDTO) GetAccountNo() string {
	if m != nil {
		return m.AccountNo
	}
	return ""
}

func (m *ETransactionDTO) GetFailReason() string {
	if m != nil {
		return m.FailReason
	}
	return ""
}

func (m *ETransactionDTO) GetReturnCode() string {
	if m != nil {
		return m.ReturnCode
	}
	return ""
}

func (m *ETransactionDTO) GetReturnMessage() string {
	if m != nil {
		return m.ReturnMessage
	}
	return ""
}

func (m *ETransactionDTO) GetException() string {
	if m != nil {
		return m.Exception
	}
	return ""
}

func (m *ETransactionDTO) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ETransactionDTO) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ETransactionDTO) GetDeletedAt() int64 {
	if m != nil {
		return m.DeletedAt
	}
	return 0
}

func (m *ETransactionDTO) GetPayerStatusKyc() bool {
	if m != nil {
		return m.PayerStatusKyc
	}
	return false
}

func (m *ETransactionDTO) GetPayerStatusLinkedBank() bool {
	if m != nil {
		return m.PayerStatusLinkedBank
	}
	return false
}

func (m *ETransactionDTO) GetPayeeStatusKyc() bool {
	if m != nil {
		return m.PayeeStatusKyc
	}
	return false
}

func (m *ETransactionDTO) GetPayeeStatusLinkedBank() bool {
	if m != nil {
		return m.PayeeStatusLinkedBank
	}
	return false
}

func (m *ETransactionDTO) GetMerchantTypeWallet() string {
	if m != nil {
		return m.MerchantTypeWallet
	}
	return ""
}

func (m *ETransactionDTO) GetBankTypeWallet() string {
	if m != nil {
		return m.BankTypeWallet
	}
	return ""
}

func (m *ETransactionDTO) GetGpayTypeWallet() string {
	if m != nil {
		return m.GpayTypeWallet
	}
	return ""
}

func (m *ETransactionDTO) GetAdminId() string {
	if m != nil {
		return m.AdminId
	}
	return ""
}

func (m *ETransactionDTO) GetIbftReceiveBank() string {
	if m != nil {
		return m.IbftReceiveBank
	}
	return ""
}

func (m *ETransactionDTO) GetIbftReceivePayeeName() string {
	if m != nil {
		return m.IbftReceivePayeeName
	}
	return ""
}

func (m *ETransactionDTO) GetAmountMerchantFeeGpayReality() int64 {
	if m != nil {
		return m.AmountMerchantFeeGpayReality
	}
	return 0
}

func (m *ETransactionDTO) GetAmountMerchantFeeGpayTmp() int64 {
	if m != nil {
		return m.AmountMerchantFeeGpayTmp
	}
	return 0
}

func (m *ETransactionDTO) GetStatusChecking() string {
	if m != nil {
		return m.StatusChecking
	}
	return ""
}

func (m *ETransactionDTO) GetTimeToChecking() int64 {
	if m != nil {
		return m.TimeToChecking
	}
	return 0
}

func (m *ETransactionDTO) GetStatusCodeChecking() string {
	if m != nil {
		return m.StatusCodeChecking
	}
	return ""
}

func (m *ETransactionDTO) GetStatusSettlement() string {
	if m != nil {
		return m.StatusSettlement
	}
	return ""
}

func (m *ETransactionDTO) GetTimeSettlement() int64 {
	if m != nil {
		return m.TimeSettlement
	}
	return 0
}

func (m *ETransactionDTO) GetReasonReverseRefID() string {
	if m != nil {
		return m.ReasonReverseRefID
	}
	return ""
}

func (m *ETransactionDTO) GetReverseRefID() string {
	if m != nil {
		return m.ReverseRefID
	}
	return ""
}

func (m *ETransactionDTO) GetHasReversed() bool {
	if m != nil {
		return m.HasReversed
	}
	return false
}

func (m *ETransactionDTO) GetVoucherID() string {
	if m != nil {
		return m.VoucherID
	}
	return ""
}

func (m *ETransactionDTO) GetSubAccountID() string {
	if m != nil {
		return m.SubAccountID
	}
	return ""
}

func (m *ETransactionDTO) GetSubscriberMerchantID() string {
	if m != nil {
		return m.SubscriberMerchantID
	}
	return ""
}

func (m *ETransactionDTO) GetSubscriberMerchantTypeWallet() string {
	if m != nil {
		return m.SubscriberMerchantTypeWallet
	}
	return ""
}

func (m *ETransactionDTO) GetLuckyMoneyID() string {
	if m != nil {
		return m.LuckyMoneyID
	}
	return ""
}

func (m *ETransactionDTO) GetProviderMerchantID() string {
	if m != nil {
		return m.ProviderMerchantID
	}
	return ""
}

func (m *ETransactionDTO) GetFeeMerchantProvider() int64 {
	if m != nil {
		return m.FeeMerchantProvider
	}
	return 0
}

func (m *ETransactionDTO) GetFeeSubscribeMerchant() int64 {
	if m != nil {
		return m.FeeSubscribeMerchant
	}
	return 0
}

func (m *ETransactionDTO) GetDiscountOfMerchantProvider() int64 {
	if m != nil {
		return m.DiscountOfMerchantProvider
	}
	return 0
}

func (m *ETransactionDTO) GetDiscountForMerchantSubscriber() int64 {
	if m != nil {
		return m.DiscountForMerchantSubscriber
	}
	return 0
}

type GetCheckFeeSuccessTransactionStatsByTimeRangeReq struct {
	MerchantId           string   `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	ServiceType          string   `protobuf:"bytes,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	TransType            string   `protobuf:"bytes,3,opt,name=trans_type,json=transType,proto3" json:"trans_type,omitempty"`
	TimeFrom             int64    `protobuf:"varint,5,opt,name=time_from,json=timeFrom,proto3" json:"time_from,omitempty"`
	TimeTo               int64    `protobuf:"varint,6,opt,name=time_to,json=timeTo,proto3" json:"time_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeReq) Reset() {
	*m = GetCheckFeeSuccessTransactionStatsByTimeRangeReq{}
}
func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeReq) String() string {
	return proto.CompactTextString(m)
}
func (*GetCheckFeeSuccessTransactionStatsByTimeRangeReq) ProtoMessage() {}
func (*GetCheckFeeSuccessTransactionStatsByTimeRangeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_9e61b905dc64a9b6, []int{2}
}
func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCheckFeeSuccessTransactionStatsByTimeRangeReq.Unmarshal(m, b)
}
func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCheckFeeSuccessTransactionStatsByTimeRangeReq.Marshal(b, m, deterministic)
}
func (dst *GetCheckFeeSuccessTransactionStatsByTimeRangeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCheckFeeSuccessTransactionStatsByTimeRangeReq.Merge(dst, src)
}
func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeReq) XXX_Size() int {
	return xxx_messageInfo_GetCheckFeeSuccessTransactionStatsByTimeRangeReq.Size(m)
}
func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCheckFeeSuccessTransactionStatsByTimeRangeReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetCheckFeeSuccessTransactionStatsByTimeRangeReq proto.InternalMessageInfo

func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeReq) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeReq) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeReq) GetTransType() string {
	if m != nil {
		return m.TransType
	}
	return ""
}

func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeReq) GetTimeFrom() int64 {
	if m != nil {
		return m.TimeFrom
	}
	return 0
}

func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeReq) GetTimeTo() int64 {
	if m != nil {
		return m.TimeTo
	}
	return 0
}

type GetCheckFeeSuccessTransactionStatsByTimeRangeRes struct {
	TotalCount                 int64    `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	TotalAmount                int64    `protobuf:"varint,2,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	TotalAmountMerchantFee     int64    `protobuf:"varint,3,opt,name=total_amount_merchant_fee,json=totalAmountMerchantFee,proto3" json:"total_amount_merchant_fee,omitempty"`
	TotalAmountMerchantFeeTemp int64    `protobuf:"varint,4,opt,name=total_amount_merchant_fee_temp,json=totalAmountMerchantFeeTemp,proto3" json:"total_amount_merchant_fee_temp,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeRes) Reset() {
	*m = GetCheckFeeSuccessTransactionStatsByTimeRangeRes{}
}
func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeRes) String() string {
	return proto.CompactTextString(m)
}
func (*GetCheckFeeSuccessTransactionStatsByTimeRangeRes) ProtoMessage() {}
func (*GetCheckFeeSuccessTransactionStatsByTimeRangeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_9e61b905dc64a9b6, []int{3}
}
func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCheckFeeSuccessTransactionStatsByTimeRangeRes.Unmarshal(m, b)
}
func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCheckFeeSuccessTransactionStatsByTimeRangeRes.Marshal(b, m, deterministic)
}
func (dst *GetCheckFeeSuccessTransactionStatsByTimeRangeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCheckFeeSuccessTransactionStatsByTimeRangeRes.Merge(dst, src)
}
func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeRes) XXX_Size() int {
	return xxx_messageInfo_GetCheckFeeSuccessTransactionStatsByTimeRangeRes.Size(m)
}
func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCheckFeeSuccessTransactionStatsByTimeRangeRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetCheckFeeSuccessTransactionStatsByTimeRangeRes proto.InternalMessageInfo

func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeRes) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeRes) GetTotalAmount() int64 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeRes) GetTotalAmountMerchantFee() int64 {
	if m != nil {
		return m.TotalAmountMerchantFee
	}
	return 0
}

func (m *GetCheckFeeSuccessTransactionStatsByTimeRangeRes) GetTotalAmountMerchantFeeTemp() int64 {
	if m != nil {
		return m.TotalAmountMerchantFeeTemp
	}
	return 0
}

type CountCheckFeeTransactionsByTimeRangeReq struct {
	MerchantId           string   `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	ServiceType          string   `protobuf:"bytes,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	TransType            string   `protobuf:"bytes,3,opt,name=trans_type,json=transType,proto3" json:"trans_type,omitempty"`
	SubTransTypes        []string `protobuf:"bytes,4,rep,name=sub_trans_types,json=subTransTypes,proto3" json:"sub_trans_types,omitempty"`
	TimeFrom             int64    `protobuf:"varint,5,opt,name=time_from,json=timeFrom,proto3" json:"time_from,omitempty"`
	TimeTo               int64    `protobuf:"varint,6,opt,name=time_to,json=timeTo,proto3" json:"time_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountCheckFeeTransactionsByTimeRangeReq) Reset() {
	*m = CountCheckFeeTransactionsByTimeRangeReq{}
}
func (m *CountCheckFeeTransactionsByTimeRangeReq) String() string { return proto.CompactTextString(m) }
func (*CountCheckFeeTransactionsByTimeRangeReq) ProtoMessage()    {}
func (*CountCheckFeeTransactionsByTimeRangeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_9e61b905dc64a9b6, []int{4}
}
func (m *CountCheckFeeTransactionsByTimeRangeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountCheckFeeTransactionsByTimeRangeReq.Unmarshal(m, b)
}
func (m *CountCheckFeeTransactionsByTimeRangeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountCheckFeeTransactionsByTimeRangeReq.Marshal(b, m, deterministic)
}
func (dst *CountCheckFeeTransactionsByTimeRangeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountCheckFeeTransactionsByTimeRangeReq.Merge(dst, src)
}
func (m *CountCheckFeeTransactionsByTimeRangeReq) XXX_Size() int {
	return xxx_messageInfo_CountCheckFeeTransactionsByTimeRangeReq.Size(m)
}
func (m *CountCheckFeeTransactionsByTimeRangeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CountCheckFeeTransactionsByTimeRangeReq.DiscardUnknown(m)
}

var xxx_messageInfo_CountCheckFeeTransactionsByTimeRangeReq proto.InternalMessageInfo

func (m *CountCheckFeeTransactionsByTimeRangeReq) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *CountCheckFeeTransactionsByTimeRangeReq) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *CountCheckFeeTransactionsByTimeRangeReq) GetTransType() string {
	if m != nil {
		return m.TransType
	}
	return ""
}

func (m *CountCheckFeeTransactionsByTimeRangeReq) GetSubTransTypes() []string {
	if m != nil {
		return m.SubTransTypes
	}
	return nil
}

func (m *CountCheckFeeTransactionsByTimeRangeReq) GetTimeFrom() int64 {
	if m != nil {
		return m.TimeFrom
	}
	return 0
}

func (m *CountCheckFeeTransactionsByTimeRangeReq) GetTimeTo() int64 {
	if m != nil {
		return m.TimeTo
	}
	return 0
}

type CountCheckFeeTransactionsByTimeRangeRes struct {
	TotalCount           int64    `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountCheckFeeTransactionsByTimeRangeRes) Reset() {
	*m = CountCheckFeeTransactionsByTimeRangeRes{}
}
func (m *CountCheckFeeTransactionsByTimeRangeRes) String() string { return proto.CompactTextString(m) }
func (*CountCheckFeeTransactionsByTimeRangeRes) ProtoMessage()    {}
func (*CountCheckFeeTransactionsByTimeRangeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_9e61b905dc64a9b6, []int{5}
}
func (m *CountCheckFeeTransactionsByTimeRangeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountCheckFeeTransactionsByTimeRangeRes.Unmarshal(m, b)
}
func (m *CountCheckFeeTransactionsByTimeRangeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountCheckFeeTransactionsByTimeRangeRes.Marshal(b, m, deterministic)
}
func (dst *CountCheckFeeTransactionsByTimeRangeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountCheckFeeTransactionsByTimeRangeRes.Merge(dst, src)
}
func (m *CountCheckFeeTransactionsByTimeRangeRes) XXX_Size() int {
	return xxx_messageInfo_CountCheckFeeTransactionsByTimeRangeRes.Size(m)
}
func (m *CountCheckFeeTransactionsByTimeRangeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CountCheckFeeTransactionsByTimeRangeRes.DiscardUnknown(m)
}

var xxx_messageInfo_CountCheckFeeTransactionsByTimeRangeRes proto.InternalMessageInfo

func (m *CountCheckFeeTransactionsByTimeRangeRes) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type FindCheckFeeTransactionsByTimeRangeReq struct {
	MerchantId           string   `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	ServiceType          string   `protobuf:"bytes,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	TransType            string   `protobuf:"bytes,3,opt,name=trans_type,json=transType,proto3" json:"trans_type,omitempty"`
	SubTransTypes        []string `protobuf:"bytes,4,rep,name=sub_trans_types,json=subTransTypes,proto3" json:"sub_trans_types,omitempty"`
	TimeFrom             int64    `protobuf:"varint,5,opt,name=time_from,json=timeFrom,proto3" json:"time_from,omitempty"`
	TimeTo               int64    `protobuf:"varint,6,opt,name=time_to,json=timeTo,proto3" json:"time_to,omitempty"`
	Offset               int64    `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int64    `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindCheckFeeTransactionsByTimeRangeReq) Reset() {
	*m = FindCheckFeeTransactionsByTimeRangeReq{}
}
func (m *FindCheckFeeTransactionsByTimeRangeReq) String() string { return proto.CompactTextString(m) }
func (*FindCheckFeeTransactionsByTimeRangeReq) ProtoMessage()    {}
func (*FindCheckFeeTransactionsByTimeRangeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_9e61b905dc64a9b6, []int{6}
}
func (m *FindCheckFeeTransactionsByTimeRangeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindCheckFeeTransactionsByTimeRangeReq.Unmarshal(m, b)
}
func (m *FindCheckFeeTransactionsByTimeRangeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindCheckFeeTransactionsByTimeRangeReq.Marshal(b, m, deterministic)
}
func (dst *FindCheckFeeTransactionsByTimeRangeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindCheckFeeTransactionsByTimeRangeReq.Merge(dst, src)
}
func (m *FindCheckFeeTransactionsByTimeRangeReq) XXX_Size() int {
	return xxx_messageInfo_FindCheckFeeTransactionsByTimeRangeReq.Size(m)
}
func (m *FindCheckFeeTransactionsByTimeRangeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindCheckFeeTransactionsByTimeRangeReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindCheckFeeTransactionsByTimeRangeReq proto.InternalMessageInfo

func (m *FindCheckFeeTransactionsByTimeRangeReq) GetMerchantId() string {
	if m != nil {
		return m.MerchantId
	}
	return ""
}

func (m *FindCheckFeeTransactionsByTimeRangeReq) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *FindCheckFeeTransactionsByTimeRangeReq) GetTransType() string {
	if m != nil {
		return m.TransType
	}
	return ""
}

func (m *FindCheckFeeTransactionsByTimeRangeReq) GetSubTransTypes() []string {
	if m != nil {
		return m.SubTransTypes
	}
	return nil
}

func (m *FindCheckFeeTransactionsByTimeRangeReq) GetTimeFrom() int64 {
	if m != nil {
		return m.TimeFrom
	}
	return 0
}

func (m *FindCheckFeeTransactionsByTimeRangeReq) GetTimeTo() int64 {
	if m != nil {
		return m.TimeTo
	}
	return 0
}

func (m *FindCheckFeeTransactionsByTimeRangeReq) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FindCheckFeeTransactionsByTimeRangeReq) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ListETransactionDTO struct {
	List                 []*ETransactionDTO `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListETransactionDTO) Reset()         { *m = ListETransactionDTO{} }
func (m *ListETransactionDTO) String() string { return proto.CompactTextString(m) }
func (*ListETransactionDTO) ProtoMessage()    {}
func (*ListETransactionDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_transaction_9e61b905dc64a9b6, []int{7}
}
func (m *ListETransactionDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListETransactionDTO.Unmarshal(m, b)
}
func (m *ListETransactionDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListETransactionDTO.Marshal(b, m, deterministic)
}
func (dst *ListETransactionDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListETransactionDTO.Merge(dst, src)
}
func (m *ListETransactionDTO) XXX_Size() int {
	return xxx_messageInfo_ListETransactionDTO.Size(m)
}
func (m *ListETransactionDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ListETransactionDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ListETransactionDTO proto.InternalMessageInfo

func (m *ListETransactionDTO) GetList() []*ETransactionDTO {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*TransactionDTO)(nil), "service_transaction.TransactionDTO")
	proto.RegisterType((*ETransactionDTO)(nil), "service_transaction.ETransactionDTO")
	proto.RegisterType((*GetCheckFeeSuccessTransactionStatsByTimeRangeReq)(nil), "service_transaction.GetCheckFeeSuccessTransactionStatsByTimeRangeReq")
	proto.RegisterType((*GetCheckFeeSuccessTransactionStatsByTimeRangeRes)(nil), "service_transaction.GetCheckFeeSuccessTransactionStatsByTimeRangeRes")
	proto.RegisterType((*CountCheckFeeTransactionsByTimeRangeReq)(nil), "service_transaction.CountCheckFeeTransactionsByTimeRangeReq")
	proto.RegisterType((*CountCheckFeeTransactionsByTimeRangeRes)(nil), "service_transaction.CountCheckFeeTransactionsByTimeRangeRes")
	proto.RegisterType((*FindCheckFeeTransactionsByTimeRangeReq)(nil), "service_transaction.FindCheckFeeTransactionsByTimeRangeReq")
	proto.RegisterType((*ListETransactionDTO)(nil), "service_transaction.ListETransactionDTO")
}

func init() {
	proto.RegisterFile("service_transaction/transaction.proto", fileDescriptor_transaction_9e61b905dc64a9b6)
}

var fileDescriptor_transaction_9e61b905dc64a9b6 = []byte{
	// 1864 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x58, 0x5b, 0x77, 0xdb, 0xc6,
	0x11, 0x3e, 0x14, 0x15, 0x59, 0x1c, 0xea, 0x62, 0xaf, 0x7c, 0x59, 0xc9, 0xb6, 0x4c, 0x33, 0xb2,
	0xad, 0xa4, 0x8e, 0xe2, 0x3a, 0x39, 0x69, 0x92, 0xa6, 0x39, 0x95, 0xc4, 0xd0, 0x61, 0xea, 0x4b,
	0x0e, 0xc4, 0xa6, 0x8f, 0x3c, 0x20, 0x30, 0xb4, 0x71, 0x44, 0x02, 0x2c, 0x00, 0xaa, 0x61, 0x7f,
	0x48, 0xfb, 0xa3, 0xfa, 0xd0, 0xff, 0xd1, 0xf7, 0xbe, 0xf7, 0xcc, 0xcc, 0x02, 0x58, 0x90, 0x90,
	0xdc, 0xf6, 0xa5, 0x0f, 0x7d, 0xe3, 0x7c, 0xdf, 0xb7, 0x8b, 0xd9, 0xcb, 0x5c, 0x96, 0xf0, 0x28,
	0xc1, 0xf8, 0x22, 0xf0, 0x70, 0x90, 0xc6, 0x6e, 0x98, 0xb8, 0x5e, 0x1a, 0x44, 0xe1, 0xa7, 0xd6,
	0xef, 0xa3, 0x69, 0x1c, 0xa5, 0x91, 0xda, 0xa9, 0x90, 0xb5, 0xff, 0xb2, 0x09, 0x5b, 0xfd, 0xc2,
	0xee, 0xf4, 0xdf, 0xa8, 0x2d, 0x58, 0x09, 0x7c, 0x5d, 0x6b, 0xd5, 0x0e, 0x1b, 0xce, 0x4a, 0xe0,
	0xab, 0x3d, 0x58, 0xf7, 0x66, 0x71, 0x8c, 0xa1, 0x37, 0xd7, 0x2b, 0x8c, 0xe6, 0xb6, 0xd2, 0x70,
	0x6d, 0x82, 0x49, 0xe2, 0xbe, 0x45, 0x5d, 0x67, 0x2a, 0x33, 0xd5, 0x4d, 0xf8, 0x20, 0x49, 0xdd,
	0x14, 0xf5, 0x2a, 0xe3, 0x62, 0xa8, 0xdb, 0xb0, 0x46, 0x3f, 0x66, 0x89, 0xfe, 0x80, 0x61, 0x63,
	0x29, 0x05, 0xab, 0xe9, 0x7c, 0x8a, 0x7a, 0x8d, 0x51, 0xfe, 0x4d, 0x5a, 0x77, 0x12, 0xcd, 0xc2,
	0x54, 0x5f, 0x6b, 0xd5, 0x0e, 0xeb, 0x8e, 0xb1, 0x54, 0x0b, 0x9a, 0x17, 0xd1, 0xcc, 0x7b, 0x87,
	0xf1, 0x69, 0xe4, 0xa3, 0x5e, 0xe7, 0x21, 0x36, 0xa4, 0x3e, 0x87, 0x5b, 0xa2, 0x3d, 0x1e, 0xa5,
	0x18, 0x1f, 0xfb, 0xfe, 0x4f, 0x42, 0xea, 0x06, 0x4f, 0x54, 0x4d, 0xaa, 0xa7, 0x70, 0x63, 0xea,
	0xce, 0x31, 0x3e, 0x66, 0xf6, 0x04, 0x47, 0x51, 0x8c, 0xfa, 0x0e, 0x8f, 0x58, 0x26, 0x32, 0x35,
	0x96, 0xd4, 0xba, 0x50, 0x97, 0x08, 0xf5, 0x31, 0x5c, 0xb7, 0xa6, 0xe0, 0x2f, 0xeb, 0x5d, 0x16,
	0x2f, 0xe1, 0x99, 0x16, 0x6d, 0xed, 0x5e, 0xa1, 0xb5, 0x71, 0xf5, 0x05, 0xdc, 0x76, 0xad, 0xef,
	0x58, 0x4b, 0x05, 0x1e, 0x71, 0x09, 0xab, 0xee, 0x41, 0x23, 0x08, 0x2f, 0xa2, 0xc0, 0xc3, 0x9e,
	0xaf, 0x9b, 0xbc, 0x83, 0x05, 0xc0, 0xa7, 0x14, 0xcd, 0x62, 0x0f, 0xf5, 0x86, 0x39, 0x25, 0xb6,
	0x54, 0x1b, 0x36, 0xe8, 0x64, 0xf8, 0xbe, 0x8c, 0x30, 0xd6, 0x9b, 0xcc, 0x96, 0x30, 0xba, 0x2d,
	0x3e, 0x5e, 0xc8, 0xc4, 0x5b, 0x72, 0x5b, 0x32, 0x9b, 0x39, 0x37, 0xc5, 0x7e, 0x30, 0x41, 0xbd,
	0x6d, 0x38, 0x63, 0x13, 0x37, 0x8a, 0x11, 0xff, 0x4c, 0xe3, 0xae, 0x0b, 0x97, 0xd9, 0xea, 0x10,
	0xb6, 0x2f, 0x30, 0x0e, 0x46, 0xf3, 0xae, 0x1b, 0x8c, 0x4f, 0xf9, 0x4a, 0xdc, 0xe0, 0xe5, 0x2d,
	0xc2, 0xb4, 0x2e, 0x2f, 0x46, 0x37, 0x45, 0xff, 0x38, 0xd5, 0x8a, 0x35, 0x05, 0x40, 0x2c, 0xfe,
	0x3c, 0x0d, 0x62, 0x66, 0x77, 0x84, 0xcd, 0x01, 0x62, 0x67, 0x53, 0xdf, 0x8c, 0xbd, 0x29, 0x6c,
	0x0e, 0xd0, 0x4d, 0xe7, 0x93, 0xea, 0xf9, 0xfa, 0x96, 0xdc, 0x74, 0x63, 0x66, 0x0c, 0x39, 0x7e,
	0xbb, 0x60, 0xc8, 0xef, 0x16, 0x34, 0x67, 0xe1, 0xef, 0x13, 0xfc, 0x83, 0x3b, 0x1e, 0x63, 0xaa,
	0xef, 0xb6, 0x6a, 0x87, 0xeb, 0x8e, 0x0d, 0xa9, 0x6f, 0x60, 0x57, 0x4e, 0xc8, 0x8a, 0xc1, 0x53,
	0x37, 0x79, 0x77, 0xe2, 0x7a, 0xe7, 0xfa, 0x1e, 0xfb, 0x70, 0xb9, 0x40, 0x3d, 0x83, 0x9d, 0xb4,
	0x0c, 0x0f, 0x69, 0xdc, 0x7d, 0xf6, 0xa2, 0x8a, 0x22, 0x8f, 0xa6, 0x6e, 0x9c, 0x86, 0x26, 0x76,
	0xf6, 0x25, 0x76, 0x2c, 0x88, 0x14, 0x7f, 0x62, 0xdf, 0x7a, 0xfe, 0x59, 0xec, 0xe9, 0x07, 0xa2,
	0xb0, 0x20, 0xba, 0x05, 0x99, 0xd9, 0x09, 0x92, 0x54, 0xb7, 0xe4, 0x16, 0xd8, 0x18, 0x45, 0x7f,
	0x8c, 0xa3, 0x9e, 0xaf, 0x1f, 0x4a, 0xf4, 0xb3, 0x41, 0x3b, 0x2c, 0x8b, 0xf9, 0xe9, 0xb8, 0xaf,
	0x3f, 0x94, 0x1d, 0xce, 0x01, 0xf5, 0x10, 0x36, 0xa6, 0xee, 0x7c, 0x82, 0x61, 0x3a, 0xe0, 0x5c,
	0x70, 0x90, 0x39, 0xc7, 0x58, 0x9f, 0x52, 0xc2, 0x75, 0xa8, 0x8f, 0x10, 0xf5, 0xa3, 0x56, 0xed,
	0x70, 0xd5, 0xa1, 0x9f, 0xea, 0x09, 0x6c, 0xfb, 0x41, 0xe2, 0xd1, 0x1c, 0x03, 0x93, 0x2d, 0x1e,
	0x33, 0xbb, 0x95, 0xc1, 0x12, 0x2e, 0xea, 0x01, 0x34, 0xc7, 0x6e, 0x92, 0x8b, 0x9e, 0xf0, 0xd7,
	0x81, 0x20, 0x23, 0xf8, 0x10, 0x36, 0x27, 0x18, 0x7b, 0xef, 0xdc, 0x30, 0x1d, 0x78, 0xb4, 0x39,
	0x87, 0xb2, 0xae, 0x0c, 0xe4, 0xdd, 0x79, 0x00, 0x4d, 0xf2, 0x6d, 0x20, 0x8b, 0xd5, 0x1f, 0xb1,
	0x04, 0x08, 0x32, 0x07, 0xfa, 0x00, 0x9a, 0xf9, 0x2c, 0x81, 0xaf, 0x3f, 0x16, 0x41, 0x06, 0xf5,
	0x7c, 0x75, 0x17, 0x1a, 0x43, 0x37, 0x3c, 0x97, 0x4f, 0xfc, 0x42, 0x2e, 0x3a, 0x01, 0x3c, 0xfd,
	0x11, 0xec, 0x30, 0x69, 0x1d, 0x1d, 0xcd, 0xf2, 0x94, 0x65, 0x37, 0x88, 0xb2, 0xae, 0x41, 0xcf,
	0xa7, 0x6d, 0x0e, 0xdd, 0xa9, 0x9b, 0xe8, 0x4f, 0xf8, 0x6a, 0x89, 0x41, 0x9f, 0x08, 0x86, 0x23,
	0xb3, 0x8b, 0x47, 0xf2, 0x09, 0x02, 0x78, 0x0b, 0xef, 0xc0, 0x35, 0xcf, 0x8d, 0xfd, 0x41, 0x18,
	0xe9, 0x4f, 0x25, 0xb8, 0xc9, 0x7c, 0x1d, 0xa9, 0xfb, 0x00, 0xae, 0x27, 0x1b, 0x19, 0x46, 0xfa,
	0x99, 0xe4, 0x04, 0x83, 0xbc, 0x8e, 0x68, 0x61, 0x23, 0x37, 0x18, 0x0f, 0x62, 0x74, 0x93, 0x28,
	0xd4, 0xbf, 0x94, 0x85, 0x11, 0xe4, 0x30, 0xa2, 0x76, 0x61, 0x3d, 0x8a, 0x7d, 0x8c, 0xc9, 0xe1,
	0xe7, 0x12, 0x07, 0x6c, 0xf7, 0x7c, 0xa2, 0x78, 0x45, 0x44, 0x7d, 0x26, 0x14, 0xdb, 0x3d, 0x9f,
	0xdc, 0x19, 0x07, 0x3f, 0x07, 0xc4, 0x7c, 0x2e, 0xee, 0x90, 0xd9, 0xf3, 0xdb, 0x7f, 0xbf, 0x05,
	0xdb, 0xdf, 0xbd, 0xa7, 0x32, 0x1d, 0xc0, 0x66, 0x6a, 0xef, 0x87, 0x29, 0x4f, 0x65, 0x90, 0x36,
	0xc9, 0x9d, 0x4e, 0x7b, 0xbe, 0xa9, 0x50, 0x62, 0x94, 0xaa, 0xda, 0xea, 0xe5, 0x55, 0xed, 0x83,
	0x4b, 0xaa, 0xda, 0x5a, 0x75, 0x55, 0xbb, 0x56, 0xaa, 0x6a, 0x2d, 0x68, 0x9a, 0x9a, 0x4b, 0x5b,
	0x9f, 0x55, 0x2a, 0x0b, 0xa2, 0xcc, 0x66, 0x39, 0xcb, 0xaa, 0x06, 0xab, 0x16, 0x61, 0x75, 0x04,
	0x2a, 0x99, 0x0d, 0xfb, 0x0b, 0x62, 0x60, 0x71, 0x05, 0xa3, 0xf6, 0xc1, 0xba, 0x96, 0x26, 0xc5,
	0xdb, 0x17, 0xb5, 0xa8, 0xae, 0x1b, 0xa5, 0xea, 0xba, 0x0f, 0x56, 0x50, 0x70, 0x86, 0x2f, 0x87,
	0xc9, 0x01, 0x6c, 0x8a, 0xb2, 0x8b, 0xf8, 0x62, 0xea, 0xce, 0x39, 0xc9, 0xd7, 0x9d, 0x32, 0xa8,
	0x1e, 0xc3, 0x96, 0x00, 0x1d, 0x13, 0x85, 0x9c, 0xef, 0xeb, 0xce, 0x02, 0x4a, 0x55, 0x54, 0x90,
	0x57, 0x26, 0x42, 0xba, 0x88, 0x9c, 0xfe, 0xeb, 0xce, 0x32, 0x71, 0x75, 0xb6, 0xbc, 0xf1, 0xbe,
	0x6c, 0xb9, 0xd0, 0x37, 0xa8, 0xe5, 0xbe, 0xa1, 0x0d, 0x1b, 0x52, 0xe9, 0xde, 0x8c, 0xba, 0xb3,
	0xd0, 0xe7, 0x12, 0xd1, 0x70, 0x4a, 0x18, 0xed, 0x4f, 0x1e, 0xcd, 0x1d, 0x2e, 0x13, 0x76, 0x7c,
	0x77, 0xa8, 0xf7, 0xc8, 0xac, 0x52, 0xac, 0x9a, 0xaa, 0x51, 0x4d, 0xd2, 0x28, 0xcf, 0xe4, 0x68,
	0x9b, 0xe8, 0x98, 0x8a, 0x52, 0x4d, 0x16, 0x59, 0xf6, 0x8e, 0x9d, 0x65, 0x35, 0x64, 0x81, 0xc7,
	0xfd, 0x88, 0x15, 0x87, 0x76, 0x6d, 0xde, 0x5d, 0xa8, 0xcd, 0x56, 0x7d, 0xdb, 0xbb, 0xb4, 0xbe,
	0xdd, 0x2d, 0xd7, 0xb7, 0x03, 0xd8, 0x7c, 0x3b, 0x75, 0xe7, 0xc7, 0x92, 0x24, 0x7a, 0x1d, 0xae,
	0x58, 0x0d, 0xa7, 0x0c, 0xd2, 0x19, 0x2f, 0x65, 0x2e, 0x53, 0xa3, 0xae, 0x4a, 0x69, 0xfb, 0x76,
	0x4a, 0xdb, 0x83, 0x3c, 0x49, 0x9a, 0x92, 0x54, 0x24, 0xcd, 0x3d, 0xc8, 0xb3, 0x9b, 0xa9, 0x45,
	0x45, 0xb6, 0xbb, 0x0d, 0x26, 0xbd, 0x99, 0x42, 0x94, 0x25, 0x3b, 0xaa, 0x44, 0x59, 0x6a, 0xd3,
	0xed, 0xc5, 0x5c, 0xb7, 0x0f, 0x56, 0x62, 0xe3, 0x42, 0x55, 0x4e, 0x75, 0xfb, 0x00, 0x31, 0xa6,
	0xb3, 0x38, 0x64, 0x7f, 0xa4, 0x4e, 0x59, 0x08, 0xed, 0x8b, 0x58, 0xaf, 0x4c, 0x16, 0x79, 0x24,
	0xfb, 0x52, 0x02, 0xa5, 0x1b, 0xf1, 0x70, 0x4a, 0x0b, 0xe7, 0xa2, 0xd5, 0x70, 0x0a, 0xa0, 0xdc,
	0xc9, 0x3c, 0xa9, 0xe8, 0x64, 0x8a, 0x5e, 0xe5, 0x70, 0xb1, 0x57, 0xb9, 0x07, 0x0d, 0x1f, 0xc7,
	0x28, 0xec, 0x47, 0xc2, 0xe6, 0x00, 0xc5, 0xe6, 0x8f, 0x74, 0xb4, 0x67, 0x9c, 0xa4, 0x7e, 0x37,
	0xf7, 0xb8, 0x4a, 0xad, 0x3b, 0x0b, 0x28, 0xdd, 0x49, 0x0b, 0x79, 0x19, 0x84, 0xe7, 0xe8, 0x9f,
	0xb8, 0xe1, 0x39, 0x57, 0xad, 0x75, 0xa7, 0x9a, 0xcc, 0x66, 0xc7, 0x62, 0xf6, 0xa7, 0xc5, 0xec,
	0xb8, 0x34, 0x3b, 0x2e, 0xcd, 0xfe, 0x49, 0x31, 0xfb, 0x12, 0x49, 0x59, 0x30, 0x4b, 0x08, 0xfd,
	0x22, 0xbb, 0x49, 0x8d, 0xab, 0x60, 0xc8, 0x1b, 0x1a, 0x67, 0x69, 0xa5, 0xb0, 0x2d, 0xa0, 0xa4,
	0xa3, 0xbc, 0x65, 0xe9, 0xa4, 0xc0, 0x2d, 0xa0, 0x14, 0x0b, 0xc7, 0xfe, 0x24, 0xa0, 0x1b, 0x6c,
	0x6a, 0x9c, 0x31, 0x29, 0x93, 0xf7, 0x86, 0xa3, 0xd4, 0x41, 0x0f, 0x83, 0x0b, 0xe4, 0x95, 0x48,
	0xa9, 0x5b, 0x84, 0xd5, 0x73, 0xb8, 0x69, 0x41, 0xbc, 0xce, 0xd7, 0xee, 0x04, 0x4d, 0xfd, 0xab,
	0xe4, 0xd4, 0x09, 0xdc, 0x5b, 0x4a, 0x87, 0xe4, 0x9a, 0x83, 0xee, 0x38, 0x48, 0xe7, 0xfa, 0xd7,
	0x7c, 0xc8, 0x57, 0x6a, 0xd4, 0xd7, 0xa0, 0x2b, 0xf9, 0xfe, 0x64, 0xaa, 0x7f, 0xcb, 0xe3, 0x2f,
	0xe5, 0x69, 0x7f, 0xe4, 0x2c, 0x4e, 0xdf, 0xa1, 0x77, 0x1e, 0x84, 0x6f, 0xf5, 0x17, 0xb2, 0x3f,
	0x65, 0x94, 0x74, 0xd4, 0xcd, 0xf7, 0xa3, 0x5c, 0xf7, 0x2b, 0xc9, 0xfb, 0x65, 0x94, 0xce, 0xd1,
	0x8c, 0x8c, 0x7c, 0xcc, 0xb5, 0x5f, 0xca, 0x39, 0x2e, 0x33, 0xf4, 0x26, 0x12, 0xf4, 0x0c, 0xd3,
	0x74, 0x8c, 0xd4, 0x10, 0xea, 0xaf, 0x58, 0xbd, 0x84, 0x67, 0x3e, 0x58, 0xca, 0xaf, 0x0b, 0x1f,
	0x2c, 0xdd, 0x11, 0x28, 0x89, 0x67, 0x07, 0x2f, 0x30, 0x4e, 0xd0, 0xc1, 0x51, 0xaf, 0xa3, 0xbf,
	0x11, 0x1f, 0x96, 0x19, 0xaa, 0x0e, 0x25, 0xe5, 0x6f, 0xa4, 0x3a, 0x94, 0x34, 0x2d, 0x68, 0x7e,
	0xef, 0x26, 0x06, 0xf2, 0xf5, 0xb7, 0xd2, 0xf1, 0x5b, 0x10, 0xc5, 0xa6, 0x79, 0x84, 0xf5, 0x3a,
	0xfa, 0x58, 0xa2, 0x3e, 0x07, 0xe8, 0x1b, 0x67, 0xb3, 0x61, 0x91, 0x50, 0x4f, 0xe4, 0x1b, 0x36,
	0x46, 0xf7, 0xe7, 0x6c, 0x36, 0x4c, 0xbc, 0x38, 0x18, 0x62, 0xfc, 0xaa, 0xa8, 0x45, 0xa7, 0x72,
	0x7f, 0xaa, 0x38, 0xba, 0x3f, 0xcb, 0xb8, 0x75, 0xdb, 0x3b, 0x3c, 0xf6, 0x4a, 0x0d, 0xf9, 0xf6,
	0x72, 0xe6, 0x9d, 0xcf, 0x5f, 0x45, 0x21, 0xce, 0x7b, 0x1d, 0xfd, 0x9d, 0xf8, 0x66, 0x63, 0xb4,
	0xa7, 0x3f, 0xc6, 0xd1, 0x45, 0xe0, 0x97, 0x3c, 0xeb, 0xca, 0x9e, 0x2e, 0x33, 0xf4, 0x82, 0xe9,
	0x22, 0x66, 0x40, 0x26, 0xd0, 0x2f, 0xf8, 0xc0, 0xaa, 0x28, 0x5a, 0x7d, 0x17, 0x31, 0x77, 0x34,
	0xe3, 0xf5, 0xf7, 0x3c, 0xa4, 0x92, 0x53, 0xdf, 0xc2, 0x5e, 0xd6, 0x71, 0xbc, 0x19, 0x2d, 0x7d,
	0xac, 0xc7, 0x23, 0xaf, 0x50, 0xa8, 0x0e, 0xdc, 0xcf, 0xd8, 0x6e, 0x94, 0xbb, 0x5f, 0x6c, 0x96,
	0xfe, 0x81, 0xa7, 0xb8, 0x5a, 0xd4, 0xfe, 0x5b, 0x0d, 0x9e, 0xbd, 0xc0, 0x94, 0xef, 0x34, 0xbb,
	0xe9, 0x79, 0x98, 0x24, 0x56, 0xf5, 0xa3, 0x9b, 0x9c, 0x9c, 0xcc, 0xe9, 0x9a, 0x3a, 0x6e, 0xf8,
	0x16, 0x1d, 0xfc, 0xe3, 0xe2, 0x7b, 0xa2, 0xb6, 0xf4, 0x9e, 0x78, 0x08, 0x1b, 0xf9, 0xff, 0x3a,
	0x54, 0x01, 0x57, 0x96, 0x9b, 0xcc, 0xfb, 0x00, 0xd2, 0x7e, 0xb3, 0x40, 0xba, 0xe0, 0x06, 0x23,
	0x4c, 0xdf, 0x85, 0x46, 0x1a, 0x4c, 0x70, 0x30, 0x8a, 0xa3, 0x09, 0xf7, 0xbb, 0x75, 0x67, 0x9d,
	0x80, 0x6e, 0x1c, 0x4d, 0xa8, 0x3f, 0x67, 0x32, 0x8d, 0xb8, 0xe5, 0xad, 0x3b, 0x6b, 0x29, 0x47,
	0x72, 0xfb, 0x9f, 0xff, 0xf9, 0x6a, 0x12, 0x7e, 0x3e, 0x45, 0xa9, 0x3b, 0x1e, 0x48, 0x4f, 0x58,
	0x93, 0xee, 0x92, 0x21, 0x79, 0xbf, 0x3f, 0x84, 0x0d, 0x11, 0x98, 0xde, 0x74, 0x85, 0x15, 0x32,
	0xc8, 0x34, 0xa0, 0x5f, 0xc1, 0xae, 0x2d, 0x19, 0xe4, 0xdb, 0x43, 0x2f, 0xc3, 0xba, 0xfc, 0xeb,
	0x61, 0xe9, 0xed, 0xfe, 0xf1, 0x04, 0xf6, 0x2f, 0x1d, 0x3a, 0x48, 0x71, 0x32, 0xe5, 0x97, 0x40,
	0xdd, 0xd9, 0xab, 0x1e, 0xdf, 0xc7, 0xc9, 0xb4, 0xfd, 0x8f, 0x1a, 0x3c, 0x61, 0x5f, 0xb3, 0x95,
	0x5b, 0x4b, 0xfe, 0x1f, 0x1c, 0xde, 0x63, 0xd8, 0x4e, 0x66, 0xc3, 0x41, 0x21, 0x49, 0xf4, 0x6a,
	0xab, 0x4e, 0xcd, 0x46, 0xf6, 0x26, 0x20, 0x59, 0xf2, 0x5f, 0x1e, 0xf2, 0x0f, 0xff, 0xee, 0x5a,
	0xdf, 0x7f, 0xb4, 0xed, 0xbf, 0xae, 0xc0, 0xe3, 0x6e, 0x10, 0xfa, 0xff, 0x07, 0xfb, 0x46, 0x6d,
	0x67, 0x34, 0x1a, 0x25, 0x98, 0xff, 0x75, 0x29, 0x16, 0x35, 0xb7, 0xe3, 0x60, 0x12, 0xa4, 0xfc,
	0x14, 0xac, 0x3b, 0x62, 0xb4, 0xdf, 0xc0, 0xce, 0xcb, 0x20, 0x49, 0x17, 0x5f, 0xbb, 0x5f, 0xc2,
	0xea, 0x38, 0x48, 0x68, 0x2b, 0xeb, 0x87, 0xcd, 0xe7, 0x07, 0x47, 0x15, 0x7f, 0xdf, 0x1e, 0x2d,
	0x8c, 0x71, 0x78, 0xc4, 0x70, 0x8d, 0xff, 0xf0, 0xfd, 0xec, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x6d, 0xb6, 0x72, 0x00, 0x19, 0x16, 0x00, 0x00,
}
