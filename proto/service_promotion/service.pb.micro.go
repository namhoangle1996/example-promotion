// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: service_promotion/service.proto

package service_promotion

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for PromotionServices service

func NewPromotionServicesEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for PromotionServices service

type PromotionServicesService interface {
	// Sends a greeting
	GetListPromotion(ctx context.Context, in *GetListPromotionRequest, opts ...client.CallOption) (*GetListPromotionResponse, error)
	GetMyPromotion(ctx context.Context, in *GetMyPromotionRequest, opts ...client.CallOption) (*GetMyPromotionResponse, error)
	GetDetailPromotion(ctx context.Context, in *GetDetailPromotionRequest, opts ...client.CallOption) (*GetDetailPromotionResponse, error)
	CheckPromotion(ctx context.Context, in *CheckPromotionRequest, opts ...client.CallOption) (*CheckPromotionResponse, error)
	BuyVoucher(ctx context.Context, in *BuyVoucherRequest, opts ...client.CallOption) (*BuyVoucherResponse, error)
	UseVoucher(ctx context.Context, in *UseVoucherRequest, opts ...client.CallOption) (*UseVoucherResponse, error)
	CheckLogBuyVoucherAutoBuy(ctx context.Context, in *CheckLogBuyVoucherAutoBuyRequest, opts ...client.CallOption) (*CheckLogBuyVoucherAutoBuyResponse, error)
	GetListPopup(ctx context.Context, in *GetListPopupRequest, opts ...client.CallOption) (*GetListPopupResponse, error)
	GetLuckMoneyFindByCode(ctx context.Context, in *GetLuckMoneyFindByCodeRequest, opts ...client.CallOption) (*GetLuckMoneyFindByCodeResponse, error)
	GetListLuckyMoneyAmount(ctx context.Context, in *GetListLuckyMoneyAmountRequest, opts ...client.CallOption) (*GetListLuckyMoneyAmountResponse, error)
	GetListLuckyMoneyMessage(ctx context.Context, in *GetListLuckyMoneyMessageRequest, opts ...client.CallOption) (*GetListLuckyMoneyMessageResponse, error)
	UpdateIncreScanLuckymoney(ctx context.Context, in *UpdateIncreScanLuckymoneyRequest, opts ...client.CallOption) (*UpdateIncreScanLuckymoneyResponse, error)
	CheckUserLuckyMoney(ctx context.Context, in *CheckUserLuckyMoneyRequest, opts ...client.CallOption) (*CheckUserLuckyMoneyResponse, error)
	InsertLogsLuckyMoney(ctx context.Context, in *InsertLogsLuckyMoneyRequest, opts ...client.CallOption) (*InsertLogsLuckyMoneyResponse, error)
	CheckLogsUserLuckyMoney(ctx context.Context, in *CheckLogsUserLuckyMoneyRequest, opts ...client.CallOption) (*CheckLogsUserLuckyMoneyResponse, error)
	ReverseWallet(ctx context.Context, in *ReverseWalletRequest, opts ...client.CallOption) (*ReverseWalletRequest, error)
}

type promotionServicesService struct {
	c    client.Client
	name string
}

func NewPromotionServicesService(name string, c client.Client) PromotionServicesService {
	return &promotionServicesService{
		c:    c,
		name: name,
	}
}

func (c *promotionServicesService) GetListPromotion(ctx context.Context, in *GetListPromotionRequest, opts ...client.CallOption) (*GetListPromotionResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.GetListPromotion", in)
	out := new(GetListPromotionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) GetMyPromotion(ctx context.Context, in *GetMyPromotionRequest, opts ...client.CallOption) (*GetMyPromotionResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.GetMyPromotion", in)
	out := new(GetMyPromotionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) GetDetailPromotion(ctx context.Context, in *GetDetailPromotionRequest, opts ...client.CallOption) (*GetDetailPromotionResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.GetDetailPromotion", in)
	out := new(GetDetailPromotionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) CheckPromotion(ctx context.Context, in *CheckPromotionRequest, opts ...client.CallOption) (*CheckPromotionResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.CheckPromotion", in)
	out := new(CheckPromotionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) BuyVoucher(ctx context.Context, in *BuyVoucherRequest, opts ...client.CallOption) (*BuyVoucherResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.BuyVoucher", in)
	out := new(BuyVoucherResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) UseVoucher(ctx context.Context, in *UseVoucherRequest, opts ...client.CallOption) (*UseVoucherResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.UseVoucher", in)
	out := new(UseVoucherResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) CheckLogBuyVoucherAutoBuy(ctx context.Context, in *CheckLogBuyVoucherAutoBuyRequest, opts ...client.CallOption) (*CheckLogBuyVoucherAutoBuyResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.CheckLogBuyVoucherAutoBuy", in)
	out := new(CheckLogBuyVoucherAutoBuyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) GetListPopup(ctx context.Context, in *GetListPopupRequest, opts ...client.CallOption) (*GetListPopupResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.GetListPopup", in)
	out := new(GetListPopupResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) GetLuckMoneyFindByCode(ctx context.Context, in *GetLuckMoneyFindByCodeRequest, opts ...client.CallOption) (*GetLuckMoneyFindByCodeResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.GetLuckMoneyFindByCode", in)
	out := new(GetLuckMoneyFindByCodeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) GetListLuckyMoneyAmount(ctx context.Context, in *GetListLuckyMoneyAmountRequest, opts ...client.CallOption) (*GetListLuckyMoneyAmountResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.GetListLuckyMoneyAmount", in)
	out := new(GetListLuckyMoneyAmountResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) GetListLuckyMoneyMessage(ctx context.Context, in *GetListLuckyMoneyMessageRequest, opts ...client.CallOption) (*GetListLuckyMoneyMessageResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.GetListLuckyMoneyMessage", in)
	out := new(GetListLuckyMoneyMessageResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) UpdateIncreScanLuckymoney(ctx context.Context, in *UpdateIncreScanLuckymoneyRequest, opts ...client.CallOption) (*UpdateIncreScanLuckymoneyResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.UpdateIncreScanLuckymoney", in)
	out := new(UpdateIncreScanLuckymoneyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) CheckUserLuckyMoney(ctx context.Context, in *CheckUserLuckyMoneyRequest, opts ...client.CallOption) (*CheckUserLuckyMoneyResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.CheckUserLuckyMoney", in)
	out := new(CheckUserLuckyMoneyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) InsertLogsLuckyMoney(ctx context.Context, in *InsertLogsLuckyMoneyRequest, opts ...client.CallOption) (*InsertLogsLuckyMoneyResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.InsertLogsLuckyMoney", in)
	out := new(InsertLogsLuckyMoneyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) CheckLogsUserLuckyMoney(ctx context.Context, in *CheckLogsUserLuckyMoneyRequest, opts ...client.CallOption) (*CheckLogsUserLuckyMoneyResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.CheckLogsUserLuckyMoney", in)
	out := new(CheckLogsUserLuckyMoneyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServicesService) ReverseWallet(ctx context.Context, in *ReverseWalletRequest, opts ...client.CallOption) (*ReverseWalletRequest, error) {
	req := c.c.NewRequest(c.name, "PromotionServices.ReverseWallet", in)
	out := new(ReverseWalletRequest)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PromotionServices service

type PromotionServicesHandler interface {
	// Sends a greeting
	GetListPromotion(context.Context, *GetListPromotionRequest, *GetListPromotionResponse) error
	GetMyPromotion(context.Context, *GetMyPromotionRequest, *GetMyPromotionResponse) error
	GetDetailPromotion(context.Context, *GetDetailPromotionRequest, *GetDetailPromotionResponse) error
	CheckPromotion(context.Context, *CheckPromotionRequest, *CheckPromotionResponse) error
	BuyVoucher(context.Context, *BuyVoucherRequest, *BuyVoucherResponse) error
	UseVoucher(context.Context, *UseVoucherRequest, *UseVoucherResponse) error
	CheckLogBuyVoucherAutoBuy(context.Context, *CheckLogBuyVoucherAutoBuyRequest, *CheckLogBuyVoucherAutoBuyResponse) error
	GetListPopup(context.Context, *GetListPopupRequest, *GetListPopupResponse) error
	GetLuckMoneyFindByCode(context.Context, *GetLuckMoneyFindByCodeRequest, *GetLuckMoneyFindByCodeResponse) error
	GetListLuckyMoneyAmount(context.Context, *GetListLuckyMoneyAmountRequest, *GetListLuckyMoneyAmountResponse) error
	GetListLuckyMoneyMessage(context.Context, *GetListLuckyMoneyMessageRequest, *GetListLuckyMoneyMessageResponse) error
	UpdateIncreScanLuckymoney(context.Context, *UpdateIncreScanLuckymoneyRequest, *UpdateIncreScanLuckymoneyResponse) error
	CheckUserLuckyMoney(context.Context, *CheckUserLuckyMoneyRequest, *CheckUserLuckyMoneyResponse) error
	InsertLogsLuckyMoney(context.Context, *InsertLogsLuckyMoneyRequest, *InsertLogsLuckyMoneyResponse) error
	CheckLogsUserLuckyMoney(context.Context, *CheckLogsUserLuckyMoneyRequest, *CheckLogsUserLuckyMoneyResponse) error
	ReverseWallet(context.Context, *ReverseWalletRequest, *ReverseWalletRequest) error
}

func RegisterPromotionServicesHandler(s server.Server, hdlr PromotionServicesHandler, opts ...server.HandlerOption) error {
	type promotionServices interface {
		GetListPromotion(ctx context.Context, in *GetListPromotionRequest, out *GetListPromotionResponse) error
		GetMyPromotion(ctx context.Context, in *GetMyPromotionRequest, out *GetMyPromotionResponse) error
		GetDetailPromotion(ctx context.Context, in *GetDetailPromotionRequest, out *GetDetailPromotionResponse) error
		CheckPromotion(ctx context.Context, in *CheckPromotionRequest, out *CheckPromotionResponse) error
		BuyVoucher(ctx context.Context, in *BuyVoucherRequest, out *BuyVoucherResponse) error
		UseVoucher(ctx context.Context, in *UseVoucherRequest, out *UseVoucherResponse) error
		CheckLogBuyVoucherAutoBuy(ctx context.Context, in *CheckLogBuyVoucherAutoBuyRequest, out *CheckLogBuyVoucherAutoBuyResponse) error
		GetListPopup(ctx context.Context, in *GetListPopupRequest, out *GetListPopupResponse) error
		GetLuckMoneyFindByCode(ctx context.Context, in *GetLuckMoneyFindByCodeRequest, out *GetLuckMoneyFindByCodeResponse) error
		GetListLuckyMoneyAmount(ctx context.Context, in *GetListLuckyMoneyAmountRequest, out *GetListLuckyMoneyAmountResponse) error
		GetListLuckyMoneyMessage(ctx context.Context, in *GetListLuckyMoneyMessageRequest, out *GetListLuckyMoneyMessageResponse) error
		UpdateIncreScanLuckymoney(ctx context.Context, in *UpdateIncreScanLuckymoneyRequest, out *UpdateIncreScanLuckymoneyResponse) error
		CheckUserLuckyMoney(ctx context.Context, in *CheckUserLuckyMoneyRequest, out *CheckUserLuckyMoneyResponse) error
		InsertLogsLuckyMoney(ctx context.Context, in *InsertLogsLuckyMoneyRequest, out *InsertLogsLuckyMoneyResponse) error
		CheckLogsUserLuckyMoney(ctx context.Context, in *CheckLogsUserLuckyMoneyRequest, out *CheckLogsUserLuckyMoneyResponse) error
		ReverseWallet(ctx context.Context, in *ReverseWalletRequest, out *ReverseWalletRequest) error
	}
	type PromotionServices struct {
		promotionServices
	}
	h := &promotionServicesHandler{hdlr}
	return s.Handle(s.NewHandler(&PromotionServices{h}, opts...))
}

type promotionServicesHandler struct {
	PromotionServicesHandler
}

func (h *promotionServicesHandler) GetListPromotion(ctx context.Context, in *GetListPromotionRequest, out *GetListPromotionResponse) error {
	return h.PromotionServicesHandler.GetListPromotion(ctx, in, out)
}

func (h *promotionServicesHandler) GetMyPromotion(ctx context.Context, in *GetMyPromotionRequest, out *GetMyPromotionResponse) error {
	return h.PromotionServicesHandler.GetMyPromotion(ctx, in, out)
}

func (h *promotionServicesHandler) GetDetailPromotion(ctx context.Context, in *GetDetailPromotionRequest, out *GetDetailPromotionResponse) error {
	return h.PromotionServicesHandler.GetDetailPromotion(ctx, in, out)
}

func (h *promotionServicesHandler) CheckPromotion(ctx context.Context, in *CheckPromotionRequest, out *CheckPromotionResponse) error {
	return h.PromotionServicesHandler.CheckPromotion(ctx, in, out)
}

func (h *promotionServicesHandler) BuyVoucher(ctx context.Context, in *BuyVoucherRequest, out *BuyVoucherResponse) error {
	return h.PromotionServicesHandler.BuyVoucher(ctx, in, out)
}

func (h *promotionServicesHandler) UseVoucher(ctx context.Context, in *UseVoucherRequest, out *UseVoucherResponse) error {
	return h.PromotionServicesHandler.UseVoucher(ctx, in, out)
}

func (h *promotionServicesHandler) CheckLogBuyVoucherAutoBuy(ctx context.Context, in *CheckLogBuyVoucherAutoBuyRequest, out *CheckLogBuyVoucherAutoBuyResponse) error {
	return h.PromotionServicesHandler.CheckLogBuyVoucherAutoBuy(ctx, in, out)
}

func (h *promotionServicesHandler) GetListPopup(ctx context.Context, in *GetListPopupRequest, out *GetListPopupResponse) error {
	return h.PromotionServicesHandler.GetListPopup(ctx, in, out)
}

func (h *promotionServicesHandler) GetLuckMoneyFindByCode(ctx context.Context, in *GetLuckMoneyFindByCodeRequest, out *GetLuckMoneyFindByCodeResponse) error {
	return h.PromotionServicesHandler.GetLuckMoneyFindByCode(ctx, in, out)
}

func (h *promotionServicesHandler) GetListLuckyMoneyAmount(ctx context.Context, in *GetListLuckyMoneyAmountRequest, out *GetListLuckyMoneyAmountResponse) error {
	return h.PromotionServicesHandler.GetListLuckyMoneyAmount(ctx, in, out)
}

func (h *promotionServicesHandler) GetListLuckyMoneyMessage(ctx context.Context, in *GetListLuckyMoneyMessageRequest, out *GetListLuckyMoneyMessageResponse) error {
	return h.PromotionServicesHandler.GetListLuckyMoneyMessage(ctx, in, out)
}

func (h *promotionServicesHandler) UpdateIncreScanLuckymoney(ctx context.Context, in *UpdateIncreScanLuckymoneyRequest, out *UpdateIncreScanLuckymoneyResponse) error {
	return h.PromotionServicesHandler.UpdateIncreScanLuckymoney(ctx, in, out)
}

func (h *promotionServicesHandler) CheckUserLuckyMoney(ctx context.Context, in *CheckUserLuckyMoneyRequest, out *CheckUserLuckyMoneyResponse) error {
	return h.PromotionServicesHandler.CheckUserLuckyMoney(ctx, in, out)
}

func (h *promotionServicesHandler) InsertLogsLuckyMoney(ctx context.Context, in *InsertLogsLuckyMoneyRequest, out *InsertLogsLuckyMoneyResponse) error {
	return h.PromotionServicesHandler.InsertLogsLuckyMoney(ctx, in, out)
}

func (h *promotionServicesHandler) CheckLogsUserLuckyMoney(ctx context.Context, in *CheckLogsUserLuckyMoneyRequest, out *CheckLogsUserLuckyMoneyResponse) error {
	return h.PromotionServicesHandler.CheckLogsUserLuckyMoney(ctx, in, out)
}

func (h *promotionServicesHandler) ReverseWallet(ctx context.Context, in *ReverseWalletRequest, out *ReverseWalletRequest) error {
	return h.PromotionServicesHandler.ReverseWallet(ctx, in, out)
}
