// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service_core/freeze_log.proto

package service_core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FreezeLogDTO struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	WalletId             string   `protobuf:"bytes,2,opt,name=walletId,proto3" json:"walletId"`
	TransactionId        string   `protobuf:"bytes,3,opt,name=transactionId,proto3" json:"transactionId"`
	Amount               uint64   `protobuf:"varint,4,opt,name=amount,proto3" json:"amount"`
	State                string   `protobuf:"bytes,5,opt,name=state,proto3" json:"state"`
	CreatedAt            int64    `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt"`
	UpdatedAt            int64    `protobuf:"varint,7,opt,name=updatedAt,proto3" json:"updatedAt"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FreezeLogDTO) Reset()         { *m = FreezeLogDTO{} }
func (m *FreezeLogDTO) String() string { return proto.CompactTextString(m) }
func (*FreezeLogDTO) ProtoMessage()    {}
func (*FreezeLogDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_73794b9f2acd832a, []int{0}
}

func (m *FreezeLogDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreezeLogDTO.Unmarshal(m, b)
}
func (m *FreezeLogDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreezeLogDTO.Marshal(b, m, deterministic)
}
func (m *FreezeLogDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreezeLogDTO.Merge(m, src)
}
func (m *FreezeLogDTO) XXX_Size() int {
	return xxx_messageInfo_FreezeLogDTO.Size(m)
}
func (m *FreezeLogDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_FreezeLogDTO.DiscardUnknown(m)
}

var xxx_messageInfo_FreezeLogDTO proto.InternalMessageInfo

func (m *FreezeLogDTO) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FreezeLogDTO) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *FreezeLogDTO) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *FreezeLogDTO) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *FreezeLogDTO) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *FreezeLogDTO) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *FreezeLogDTO) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func init() {
	proto.RegisterType((*FreezeLogDTO)(nil), "service_core.FreezeLogDTO")
}

func init() {
	proto.RegisterFile("service_core/freeze_log.proto", fileDescriptor_73794b9f2acd832a)
}

var fileDescriptor_73794b9f2acd832a = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0x8d, 0x4f, 0xce, 0x2f, 0x4a, 0xd5, 0x4f, 0x2b, 0x4a, 0x4d, 0xad, 0x4a, 0x8d,
	0xcf, 0xc9, 0x4f, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x41, 0x96, 0x56, 0x3a, 0xc5,
	0xc8, 0xc5, 0xe3, 0x06, 0x56, 0xe2, 0x93, 0x9f, 0xee, 0x12, 0xe2, 0x2f, 0xc4, 0xc7, 0xc5, 0x94,
	0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0xc4, 0x94, 0x99, 0x22, 0x24, 0xc5, 0xc5, 0x51,
	0x9e, 0x98, 0x93, 0x93, 0x5a, 0xe2, 0x99, 0x22, 0xc1, 0x04, 0x16, 0x85, 0xf3, 0x85, 0x54, 0xb8,
	0x78, 0x4b, 0x8a, 0x12, 0xf3, 0x8a, 0x13, 0x93, 0x4b, 0x32, 0xf3, 0xf3, 0x3c, 0x53, 0x24, 0x98,
	0xc1, 0x0a, 0x50, 0x05, 0x85, 0xc4, 0xb8, 0xd8, 0x12, 0x73, 0xf3, 0x4b, 0xf3, 0x4a, 0x24, 0x58,
	0x14, 0x18, 0x35, 0x58, 0x82, 0xa0, 0x3c, 0x21, 0x11, 0x2e, 0xd6, 0xe2, 0x92, 0xc4, 0x92, 0x54,
	0x09, 0x56, 0xb0, 0x2e, 0x08, 0x47, 0x48, 0x86, 0x8b, 0x33, 0xb9, 0x28, 0x35, 0xb1, 0x24, 0x35,
	0xc5, 0xb1, 0x44, 0x82, 0x4d, 0x81, 0x51, 0x83, 0x39, 0x08, 0x21, 0x00, 0x92, 0x2d, 0x2d, 0x48,
	0x81, 0xca, 0xb2, 0x43, 0x64, 0xe1, 0x02, 0x49, 0x6c, 0x60, 0x1f, 0x1a, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xc7, 0x44, 0xf1, 0xe6, 0x02, 0x01, 0x00, 0x00,
}
